apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: visibility
spec:
  replicas: 1 # kpt-set: ${prometheus.replicas}
  enableAdminAPI: true # kpt-set: ${prometheus.enable-admin-api}
  externalUrl: "http://localhost:9090/" # kpt-set: ${prometheus.external-url}
  retention: 3w # kpt-set: ${prometheus.retention}
  retentionSize: 10GB # kpt-set: ${prometheus.retention-size}
  logLevel: info # kpt-set: ${prometheus.log-level}
  logFormat: logfmt # kpt-set: ${prometheus.log-format}
  alerting:
    alertmanagers:
      - name: alertmanager-visibility
        namespace: kube-visibility # kpt-set: ${namespace}
        port: web
  resources:
    limits:
      cpu: 200m # kpt-set: ${prometheus.resources-limits-cpu}
      memory: 500Mi # kpt-set: ${prometheus.resources-limits-memory}
    requests:
      cpu: 100m # kpt-set: ${prometheus.resources-requests-cpu}
      memory: 300Mi # kpt-set: ${prometheus.resources-requests-memory}
  ruleSelector:
    matchLabels:
      prometheus: visibility
    matchExpressions:
      - {key: role, operator: In, values: [alert-rules, record-rules]}
  serviceMonitorNamespaceSelector: {}
  # This allow that any kind: ServiceMonitor that have the label 'prometheus-visibility.monitoring: "enabled"' will be scraped
  serviceMonitorSelector:
    matchLabels:
      prometheus-visibility.monitoring: "enabled"
  podMonitorNamespaceSelector: {}
  # This allow that any kind: PodMonitor that have the label 'prometheus-visibility.monitoring: "enabled"' will be scraped
  podMonitorSelector:
    matchLabels:
      prometheus-visibility.monitoring: "enabled"
