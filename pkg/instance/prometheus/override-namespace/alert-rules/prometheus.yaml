apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: prometheus-alert-rules
  labels:
    prometheus: visibility
    role: alert-rules
spec:
  groups:
    - name: alert--prometheus
      rules:
        - alert: PrometheusBadConfig
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            max_over_time(prometheus_config_last_reload_successful{service="prometheus-visibility"}[5m]) == 0
          for: 10m
          labels:
            severity: critical
            team: visibility
            service: prometheus
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to reload its configuration.
            summary: Failed Prometheus configuration reload.
        - alert: PrometheusNotificationQueueRunningFull
          expr: |
            # Without min_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            (
              predict_linear(prometheus_notifications_queue_length{service="prometheus-visibility"}[5m], 60 * 30)
            >
              min_over_time(prometheus_notifications_queue_capacity{service="prometheus-visibility"}[5m])
            )
          for: 15m
          labels:
            severity: warning
            team: visibility
            service: prometheus
          annotations:
            description: Alert notification queue of Prometheus {{$labels.namespace}}/{{$labels.pod}} is running full.
            summary: Prometheus alert notification queue predicted to run full in less than 30m.
        - alert: PrometheusErrorSendingAlertsToSomeAlertmanagers
          expr: |
            (
              rate(prometheus_notifications_errors_total{service="prometheus-visibility"}[5m])
            /
              rate(prometheus_notifications_sent_total{service="prometheus-visibility"}[5m])
            )
            * 100
            > 1
          for: 15m
          labels:
            severity: warning
            team: visibility
            service: prometheus
          annotations:
            description: '{{ printf "%.1f" $value }}% errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to Alertmanager {{$labels.alertmanager}}.'
            summary: Prometheus has encountered more than 1% errors sending alerts to a specific Alertmanager.
        - alert: PrometheusErrorSendingAlertsToAnyAlertmanager
          expr: |
            min without(alertmanager) (
              rate(prometheus_notifications_errors_total{service="prometheus-visibility"}[5m])
            /
              rate(prometheus_notifications_sent_total{service="prometheus-visibility"}[5m])
            )
            * 100
            > 3
          for: 15m
          labels:
            severity: critical
            team: visibility
            service: prometheus
          annotations:
            description: '{{ printf "%.1f" $value }}% minimum errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to any Alertmanager.'
            summary: Prometheus encounters more than 3% errors sending alerts to any Alertmanager.
        - alert: PrometheusNotConnectedToAlertmanagers
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            max_over_time(prometheus_notifications_alertmanagers_discovered{service="prometheus-visibility"}[5m]) < 1
          for: 10m
          labels:
            severity: warning
            team: visibility
            service: prometheus
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is not connected to any Alertmanagers.
            summary: Prometheus is not connected to any Alertmanagers.
        - alert: PrometheusTSDBReloadsFailing
          expr: |
            increase(prometheus_tsdb_reloads_failures_total{service="prometheus-visibility"}[3h]) > 0
          for: 4h
          labels:
            severity: warning
            team: visibility
            service: prometheus
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} reload failures over the last 3h.
            summary: Prometheus has issues reloading blocks from disk.
        - alert: PrometheusTSDBCompactionsFailing
          expr: |
            increase(prometheus_tsdb_compactions_failed_total{service="prometheus-visibility"}[3h]) > 0
          for: 4h
          labels:
            severity: warning
            team: visibility
            service: prometheus
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} compaction failures over the last 3h.
            summary: Prometheus has issues compacting blocks.
        - alert: PrometheusNotIngestingSamples
          expr: |
            rate(prometheus_tsdb_head_samples_appended_total{service="prometheus-visibility"}[5m]) <= 0
          for: 10m
          labels:
            severity: warning
            team: visibility
            service: prometheus
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is not ingesting samples.
            summary: Prometheus is not ingesting samples.
        - alert: PrometheusDuplicateTimestamps
          expr: |
            rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{service="prometheus-visibility"}[5m]) > 0
          for: 10m
          labels:
            severity: warning
            team: visibility
            service: prometheus
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf "%.4g" $value  }} samples/s with different values but duplicated timestamp.
            summary: Prometheus is dropping samples with duplicate timestamps.
        - alert: PrometheusOutOfOrderTimestamps
          expr: |
            rate(prometheus_target_scrapes_sample_out_of_order_total{service="prometheus-visibility"}[5m]) > 0
          for: 10m
          labels:
            severity: warning
            team: visibility
            service: prometheus
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf "%.4g" $value  }} samples/s with timestamps arriving out of order.
            summary: Prometheus drops samples with out-of-order timestamps.
        - alert: PrometheusRemoteStorageFailures
          expr: |
            (
              rate(prometheus_remote_storage_failed_samples_total{service="prometheus-visibility"}[5m])
            /
              (
                rate(prometheus_remote_storage_failed_samples_total{service="prometheus-visibility"}[5m])
              +
                rate(prometheus_remote_storage_succeeded_samples_total{service="prometheus-visibility"}[5m])
              )
            )
            * 100
            > 1
          for: 15m
          labels:
            severity: critical
            team: visibility
            service: prometheus
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} failed to send {{ printf "%.1f" $value }}% of the samples to {{ $labels.remote_name}}:{{ $labels.url }}
            summary: Prometheus fails to send samples to remote storage.
        - alert: PrometheusRemoteWriteBehind
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            (
              max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds{service="prometheus-visibility"}[5m])
            - on(job, instance) group_right
              max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{service="prometheus-visibility"}[5m])
            )
            > 120
          for: 15m
          labels:
            severity: critical
            team: visibility
            service: prometheus
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write is {{ printf "%.1f" $value }}s behind for {{ $labels.remote_name}}:{{ $labels.url }}.
            summary: Prometheus remote write is behind.
        - alert: PrometheusRemoteWriteDesiredShards
          expr: |
            # Without max_over_time, failed scrapes could create false negatives, see
            # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
            (
              max_over_time(prometheus_remote_storage_shards_desired{service="prometheus-visibility"}[5m])
            >
              max_over_time(prometheus_remote_storage_shards_max{service="prometheus-visibility"}[5m])
            )
          for: 15m
          labels:
            severity: warning
            team: visibility
            service: prometheus
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write desired shards calculation wants to run {{ $value }} shards for queue {{ $labels.remote_name}}:{{ $labels.url }}, which is more than the max of {{ printf `prometheus_remote_storage_shards_max{instance="%s",service="prometheus-visibility"}` $labels.instance | query | first | value }}.
            summary: Prometheus remote write desired shards calculation wants to run more than configured max shards.
        - alert: PrometheusRuleFailures
          expr: |
            increase(prometheus_rule_evaluation_failures_total{service="prometheus-visibility"}[5m]) > 0
          for: 15m
          labels:
            severity: critical
            team: visibility
            service: prometheus
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to evaluate {{ printf "%.0f" $value }} rules in the last 5m.
            summary: Prometheus is failing rule evaluations.
        - alert: PrometheusMissingRuleEvaluations
          expr: |
            increase(prometheus_rule_group_iterations_missed_total{service="prometheus-visibility"}[5m]) > 0
          for: 15m
          labels:
            severity: warning
            team: visibility
            service: prometheus
          annotations:
            description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has missed {{ printf "%.0f" $value }} rule group evaluations in the last 5m.
            summary: Prometheus is missing rule evaluations due to slow rule group evaluation.
