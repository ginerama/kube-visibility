apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: general-alert-rules
  labels:
    prometheus: visibility
    role: alert-rules
spec:
  groups:
    - name: alert--general
      rules:
        - alert: TargetDown
          expr: 100 * (count(up == 0) BY (job, namespace, service) / count(up) BY (job, namespace, service)) > 10
          for: 10m
          labels:
            severity: warning
            team: visibility
            service: "{{ $labels.service }}"
          annotations:
            title: "Target Down"
            summary: '{{ printf "%.4g" $value }}% of {{ $labels.service }} are down'
            description: '{{ printf "%.4g" $value }}% of the {{ $labels.job }}/{{ $labels.service }} targets in {{ $labels.namespace }} namespace are down.'
        - alert: Watchdog
          expr: vector(1)
          labels:
            severity: none
            team: visibility
            service: watchdog
          annotations:
            title: "Watchdog"
            summary: "This Watchdog alert is ensuring that alerting pipeline is functional"
            description: |
              This is an alert meant to ensure that the entire alerting pipeline is functional.
              This alert is always firing, therefore it should always be firing in Alertmanager
              and always fire against a receiver. There are integrations with various notification
              mechanisms that send a notification when this alert is not firing. For example the
              "DeadMansSnitch" integration in PagerDuty.
